block(`BaseFacts) {
   inactive(),
   alias_all(`libbatfish:Bgp),
   alias_all(`libbatfish:BgpAdvertisement),
   alias_all(`libbatfish:Flow),
   alias_all(`libbatfish:GeneratedRoute),
   alias_all(`libbatfish:Interface),
   alias_all(`libbatfish:Ip),
   alias_all(`libbatfish:Layer2),
   alias_all(`libbatfish:Node),
   alias_all(`libbatfish:Route),
   clauses(`{
// BEGIN CODE

+Node(node), +Node_name(node:"(none)").
+Node(node), +Node_name(node:"(ambiguous)").

+AdvertisementType(type), +AdvertisementType_name(type:"bgp").
+AdvertisementType(type), +AdvertisementType_name(type:"bgp_ti").
+AdvertisementType(type), +AdvertisementType_name(type:"bgp_to").
+AdvertisementType(type), +AdvertisementType_name(type:"ibgp").
+AdvertisementType(type), +AdvertisementType_name(type:"ibgp_ti").
+AdvertisementType(type), +AdvertisementType_name(type:"ibgp_to").

+Interface(interface), +Interface_name(interface:"dynamic").
+Interface(interface), +Interface_name(interface:"flow_sink_termination").
+Interface(interface), +Interface_name(interface:"null_interface").

+OriginType(type), +OriginType_name(type:"igp").
+OriginType(type), +OriginType_name(type:"egp").
+OriginType(type), +OriginType_name(type:"incomplete").

+RoutingProtocol(protocol), +RoutingProtocol_name(protocol:"aggregate").
+RoutingProtocol(protocol), +RoutingProtocol_name(protocol:"bgp").
+RoutingProtocol(protocol), +RoutingProtocol_name(protocol:"connected").
+RoutingProtocol(protocol), +RoutingProtocol_name(protocol:"ibgp").
+RoutingProtocol(protocol), +RoutingProtocol_name(protocol:"isisL1").
+RoutingProtocol(protocol), +RoutingProtocol_name(protocol:"isisL2").
+RoutingProtocol(protocol), +RoutingProtocol_name(protocol:"isisEL1").
+RoutingProtocol(protocol), +RoutingProtocol_name(protocol:"isisEL2").
+RoutingProtocol(protocol), +RoutingProtocol_name(protocol:"ldp").
+RoutingProtocol(protocol), +RoutingProtocol_name(protocol:"ospf").
+RoutingProtocol(protocol), +RoutingProtocol_name(protocol:"ospfIA").
+RoutingProtocol(protocol), +RoutingProtocol_name(protocol:"ospfE1").
+RoutingProtocol(protocol), +RoutingProtocol_name(protocol:"ospfE2").
+RoutingProtocol(protocol), +RoutingProtocol_name(protocol:"rsvp").
+RoutingProtocol(protocol), +RoutingProtocol_name(protocol:"static").

+Ip(ip), +Ip_address(ip:0).
+Ip(ip), +Ip_address(ip:-1).

+Encapsulation(encapsulation), +Encapsulation_name(encapsulation:"dot1q").

+IpProtocol(protocol), +IpProtocol_number(protocol:256). //anyip
+IpProtocol(protocol), +IpProtocol_number(protocol:6). //tcp
+IpProtocol(protocol), +IpProtocol_number(protocol:17). //udp

+Vendor(vendor), +Vendor_name(vendor:"arista").
+Vendor(vendor), +Vendor_name(vendor:"cisco").
+Vendor(vendor), +Vendor_name(vendor:"juniper").

+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"arista"),
   +RoutingProtocol_name(protocol:"bgp"),
   distance = 200.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"arista"),
   +RoutingProtocol_name(protocol:"ibgp"),
   distance = 200.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"arista"),
   +RoutingProtocol_name(protocol:"connected"),
   distance = 0.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"arista"),
   +RoutingProtocol_name(protocol:"ospf"),
   distance = 110.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"arista"),
   +RoutingProtocol_name(protocol:"ospfIA"),
   distance = 110.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"arista"),
   +RoutingProtocol_name(protocol:"ospfE1"),
   distance = 110.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"arista"),
   +RoutingProtocol_name(protocol:"ospfE2"),
   distance = 110.

+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"cisco"),
   +RoutingProtocol_name(protocol:"bgp"),
   distance = 20.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"cisco"),
   +RoutingProtocol_name(protocol:"ibgp"),
   distance = 200.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"cisco"),
   +RoutingProtocol_name(protocol:"connected"),
   distance = 0.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"cisco"),
   +RoutingProtocol_name(protocol:"isisL1"),
   distance = 115.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"cisco"),
   +RoutingProtocol_name(protocol:"isisL2"),
   distance = 115.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"cisco"),
   +RoutingProtocol_name(protocol:"isisEL1"),
   distance = 115.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"cisco"),
   +RoutingProtocol_name(protocol:"isisEL2"),
   distance = 115.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"cisco"),
   +RoutingProtocol_name(protocol:"ospf"),
   distance = 110.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"cisco"),
   +RoutingProtocol_name(protocol:"ospfIA"),
   distance = 110.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"cisco"),
   +RoutingProtocol_name(protocol:"ospfE1"),
   distance = 110.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"cisco"),
   +RoutingProtocol_name(protocol:"ospfE2"),
   distance = 110.

+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"juniper"),
   +RoutingProtocol_name(protocol:"bgp"),
   distance = 170.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"juniper"),
   +RoutingProtocol_name(protocol:"ibgp"),
   distance = 170.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"juniper"),
   +RoutingProtocol_name(protocol:"connected"),
   distance = 0.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"juniper"),
   +RoutingProtocol_name(protocol:"isisL1"),
   distance = 15.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"juniper"),
   +RoutingProtocol_name(protocol:"isisL2"),
   distance = 18.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"juniper"),
   +RoutingProtocol_name(protocol:"isisEL1"),
   distance = 160.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"juniper"),
   +RoutingProtocol_name(protocol:"isisEL2"),
   distance = 165.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"juniper"),
   +RoutingProtocol_name(protocol:"ospf"),
   distance = 10.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"juniper"),
   +RoutingProtocol_name(protocol:"ospfIA"),
   distance = 10.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"juniper"),
   +RoutingProtocol_name(protocol:"ospfE1"),
   distance = 150.
+AdministrativeDistance[vendor, protocol] = distance <-
   +Vendor_name(vendor:"juniper"),
   +RoutingProtocol_name(protocol:"ospfE2"),
   distance = 150.

+GeneratedRouteType(type), +GeneratedRouteType_name(type:"aggregate").
+GeneratedRouteType(type), +GeneratedRouteType_name(type:"bgp").
+GeneratedRouteType(type), +GeneratedRouteType_name(type:"bgp_neighbor").
+GeneratedRouteType(type), +GeneratedRouteType_name(type:"global").
+GeneratedRouteType(type), +GeneratedRouteType_name(type:"isis").
+GeneratedRouteType(type), +GeneratedRouteType_name(type:"ospf").

// END CODE
   }) //clauses
} <-- .

